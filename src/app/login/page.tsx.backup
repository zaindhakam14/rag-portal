'use client';
import { FormEvent, useState } from 'react';
import { supabase } from '@/lib/supabase/client';
import { useRouter } from 'next/navigation';

export default function LoginPage() {
  const [email, setEmail] = useState('');
  const [pw, setPw] = useState('');
  const [err, setErr] = useState<string|null>(null);
  const [loading, setLoading] = useState(false);
  const router = useRouter();

  async function onSubmit(e: FormEvent) {
    e.preventDefault();
    setErr(null); setLoading(true);
    try {
      // Sign in (or sign up then sign in)
      let { data, error } = await supabase.auth.signInWithPassword({ email, password: pw });
      if (error?.message?.includes('Invalid login credentials')) {
        const { error: signupErr } = await supabase.auth.signUp({ email, password: pw });
        if (signupErr) throw signupErr;
        ({ data, error } = await supabase.auth.signInWithPassword({ email, password: pw }));
        if (error) throw error;
      } else if (error) throw error;

      router.push('/chat');
    } catch (e: any) {
      setErr(e?.message ?? 'Login failed');
    } finally {
      setLoading(false);
    }
  }

  return (
    <main className="mx-auto max-w-sm p-6 space-y-4">
      <h1 className="text-2xl font-semibold">Sign in</h1>
      <form onSubmit={onSubmit} className="space-y-3">
        <input className="w-full border rounded px-3 py-2"
          placeholder="email" type="email" value={email}
          onChange={(e)=>setEmail(e.target.value)} />
        <input className="w-full border rounded px-3 py-2"
          placeholder="password" type="password" value={pw}
          onChange={(e)=>setPw(e.target.value)} />
        <button className="w-full px-4 py-2 rounded bg-black text-white disabled:opacity-60"
          disabled={loading}>{loading?'Signing inâ€¦':'Sign in'}</button>
      </form>
      {err && <p className="text-sm text-red-600">{err}</p>}
    </main>
  );
}
